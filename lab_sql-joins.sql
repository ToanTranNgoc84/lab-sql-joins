USE sakila;

-- Challenge - Joining on multiple tables

-- Write SQL queries to perform the following tasks using the Sakila database:

-- 1.List the number of films per category.
SELECT c.name AS category, COUNT(f.film_id) AS film_count
FROM film f
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
GROUP BY c.name;

-- 2.Retrieve the store ID, city, and country for each store.
SELECT store.store_id, city.city, country.country FROM store
JOIN address ON address.address_id = store.address_id
JOIN city ON city.city_id = address.city_id 
JOIN country ON country.country_id = city.country_id;

-- 3.Calculate the total revenue generated by each store in dollars.
SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM payment p
JOIN rental r ON p.rental_id = r.rental_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN store s ON i.store_id = s.store_id
GROUP BY s.store_id;

-- 4.Determine the average running time of films for each category.
SELECT category.name , ROUND(AVG(film.length),0) FROM film
JOIN film_category ON film_category.film_id = film.film_id
JOIN category ON category.category_id = film_category.category_id
GROUP BY category.name;



-- Bonus:
-- 5.Identify the film categories with the longest average running time.
-- 6.Display the top 10 most frequently rented movies in descending order.
-- 7.Provide a list of all distinct film titles, along with their availability status in the inventory. Include a column indicating whether each title is 'Available' or 'NOT available.' Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."
-- 8.Here are some tips to help you successfully complete the lab: